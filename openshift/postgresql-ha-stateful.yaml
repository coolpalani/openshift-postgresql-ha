---
apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: postgresql-ha-ephemeral-template
objects:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: ${DATABASE_SERVICE_NAME}

- apiVersion: v1
  groupNames: null
  kind: RoleBinding
  metadata:
    name: postgres_edit
  roleRef:
    name: edit
  subjects:
  - kind: ServiceAccount
    name: ${DATABASE_SERVICE_NAME}
- apiVersion: v1
  kind: Service
  metadata:
    name: ${DATABASE_SERVICE_NAME}
  spec:
    ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
    - name: patroni
      port: 8008
      protocol: TCP
      targetPort: 8008
    selector:
      name: ${DATABASE_SERVICE_NAME}
      role: master
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Secret
  metadata:
    name: ${DATABASE_SERVICE_NAME}
  stringData:
    database-password: ${POSTGRESQL_PASSWORD}
    database-user: ${POSTGRESQL_USER}
    database-replica-user: ${POSTGRESQL_REP_USER}
    database-replica-password: ${POSTGRESQL_REP_PASSWORD}
    database-admin-password: ${POSTGRESQL_ADMIN_PASSWORD}
    database-postgres-password: ${POSTGRESQL_POSTGRES_PASSWORD}
- apiVersion: apps/v1beta1
  kind: StatefulSet
  metadata:
    name: ${DATABASE_SERVICE_NAME}
    annotations:
      scheduler.alpha.kubernetes.io/affinity: >
            {
                "podAntiAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": [
                    {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "name",
                              "operator": "In",
                              "values": ["${DATABASE_SERVICE_NAME}"]
                            }
                          ]
                         },
                         "topologyKey": "kubernetes.io/hostname"
                    }
                  ]
                 }
            }
  spec:
    serviceName: ${DATABASE_SERVICE_NAME}
    replicas: 3
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: name
              operator: "In"
              values:
              - ${DATABASE_SERVICE_NAME}
          topologyKey: kubernetes.io/hostname
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: ${DATABASE_SERVICE_NAME}
      spec:
        containers:
        - image: docker.io/jcpowermac/openshift-postgresql-ha
          env:
          - name: POSTGRESQL_REP_USER
            valueFrom:
              secretKeyRef:
                key: database-replica-user
                name: ${DATABASE_SERVICE_NAME}
          - name: POSTGRESQL_REP_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-replica-password
                name: ${DATABASE_SERVICE_NAME}
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: ${DATABASE_SERVICE_NAME}
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: ${DATABASE_SERVICE_NAME}
          - name: POSTGRESQL_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-admin-password
                name: ${DATABASE_SERVICE_NAME}
          - name: POSTGRESQL_POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-postgres-password
                name: ${DATABASE_SERVICE_NAME}
          - name: POSTGRESQL_DATABASE
            value: ${POSTGRESQL_DATABASE}
          - name: ETCD_SERVICE_URL
            value: ${ETCD_SERVICE_URL}
          imagePullPolicy: Always
          livenessProbe:
            initialDelaySeconds: 60
            tcpSocket:
              port: 5432
            periodSeconds: 30
            failureThreshold: 20
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            initialDelaySeconds: 10
            failureThreshold: 30
            periodSeconds: 10
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          - containerPort: 8008
            protocol: TCP
          resources:
            limits:
              memory: ${MEMORY_LIMIT}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/pgsql/pgdata
            name: ${DATABASE_SERVICE_NAME}-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        serviceAccount: ${DATABASE_SERVICE_NAME}
        serviceAccountName: ${DATABASE_SERVICE_NAME}
        terminationGracePeriodSeconds: 30
    volumeClaimTemplates:
    - metadata:
        name: ${DATABASE_SERVICE_NAME}-data
        annotations: {}
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: ${VOLUME_CAPACITY}
parameters:
- description: Maximum amount of memory the container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  required: true
  value: 512Mi

- description: The name of the OpenShift Service exposed for the database.
  displayName: Database Service Name
  name: DATABASE_SERVICE_NAME
  required: true
  value: postgresql

- description: Volume space available for data, e.g. 512Mi, 2Gi.
  displayName: Volume Capacity
  name: VOLUME_CAPACITY
  required: true
  value: 1Gi

- description: Username for PostgreSQL user that will be used for accessing the database.
  displayName: PostgreSQL Connection Username
  from: user[A-Z0-9]{3}
  generate: expression
  name: POSTGRESQL_USER
  required: true

- description: Password for the PostgreSQL postgres user.
  displayName: PostgreSQL postgres Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: POSTGRESQL_POSTGRES_PASSWORD
  required: true

- description: Password for the PostgreSQL admin.
  displayName: PostgreSQL Admin Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: POSTGRESQL_ADMIN_PASSWORD
  required: true
- description: Password for the PostgreSQL connection user.
  displayName: PostgreSQL Connection Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: POSTGRESQL_PASSWORD
  required: true
- description: Username for PostgreSQL user that will be used for replicating the database.
  displayName: PostgreSQL Replication Username
  from: user[A-Z0-9]{3}
  generate: expression
  name: POSTGRESQL_REP_USER
  required: true
- description: Password for the PostgreSQL replication user.
  displayName: PostgreSQL Replication Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: POSTGRESQL_REP_PASSWORD
  required: true
- description: Name of the PostgreSQL database accessed.
  displayName: PostgreSQL Database Name
  name: POSTGRESQL_DATABASE
  required: true
  value: sampledb
- description: Url of the etcd cluster
  displayName: etcd url
  name: ETCD_SERVICE_URL
  required: true
  value: example-etcd-cluster
