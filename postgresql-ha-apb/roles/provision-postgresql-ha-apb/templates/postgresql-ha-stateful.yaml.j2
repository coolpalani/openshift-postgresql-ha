---
apiVersion: v1
kind: List 
items:

- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: "{{ database_service_name }}"

- apiVersion: v1
  groupNames: null
  kind: RoleBinding
  metadata:
    name: postgres_edit 
  roleRef:
    name: edit
  subjects:
  - kind: ServiceAccount
    name: "{{ database_service_name }}"

- apiVersion: v1
  kind: Service
  metadata:
    name: {{ database_service_name }} 
  spec:
    ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
    - name: patroni 
      port: 8008
      protocol: TCP
      targetPort: 8008
    selector:
      name: {{ database_service_name }} 
      role: master
    sessionAffinity: None
    type: ClusterIP

- apiVersion: v1
  kind: Secret
  metadata:
    name: {{ database_service_name }}
  stringData:
    database-password: {{ postgresql_password }}
    database-user: {{ postgresql_user }}
    database-replica-user: {{ postgresql_rep_user }}
    database-replica-password: {{ postgresql_rep_password }}
    database-admin-password: {{ postgresql_admin_password }}
    database-postgres-password: {{ postgresql_postgres_password }}

- apiVersion: apps/v1beta1 
  kind: StatefulSet 
  metadata:
    name: {{ database_service_name }}
    annotations:
      scheduler.alpha.kubernetes.io/affinity: >
            {
                "podAntiAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": [
                    {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "name",
                              "operator": "In",
                              "values": ["{{ database_service_name }}"]
                            }
                          ]
                         },
                         "topologyKey": "kubernetes.io/hostname" 
                    }
                  ]
                 }
            } 
  spec:
    serviceName: {{ database_service_name }}
    replicas: 3
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: name
              operator: "In"
              values:
                - {{ database_service_name }}
          topologyKey: kubernetes.io/hostname
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: {{ database_service_name }}
      spec:
        containers:
        - image: docker.io/jcpowermac/openshift-postgresql-ha 
          env:
          - name: POSTGRESQL_REP_USER
            valueFrom:
              secretKeyRef:
                key: database-replica-user
                name: {{ database_service_name }}
          - name: POSTGRESQL_REP_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-replica-password
                name: {{ database_service_name }}
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: {{ database_service_name }}
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: {{ database_service_name }}
          - name: POSTGRESQL_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-admin-password
                name: {{ database_service_name }}
          - name: POSTGRESQL_POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-postgres-password
                name: {{ database_service_name }}
          - name: POSTGRESQL_DATABASE
            value: {{ postgresql_database }}
          - name: ETCD_SERVICE_URL
            value: etcd
          imagePullPolicy: Always
          livenessProbe:
            initialDelaySeconds: 60
            tcpSocket:
              port: 5432
            periodSeconds: 30
            failureThreshold: 20
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            initialDelaySeconds: 10 
            failureThreshold: 30
            periodSeconds: 10
          name: postgresql 
          ports:
          - containerPort: 5432
            protocol: TCP
          - containerPort: 8008
            protocol: TCP
          resources:
            limits:
              memory: {{ memory_limit }}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/pgsql/pgdata
            name: {{ database_service_name }}-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        serviceAccount: {{ database_service_name }}
        serviceAccountName: {{ database_service_name }}
        terminationGracePeriodSeconds: 30
    volumeClaimTemplates:
    - metadata:
        name:  {{ database_service_name }}-data
        annotations: {}
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ volume_capacity }} 
